#ReadMe
#1  save as excel worksheet - otherwise (CSV, CSV-DOS, etc.) a warning will throw, so might as well not reformat.
#2  If output excel sheet is open, and you try to run script again, error 'No13 - Permission Denied' will be thrown


#import libraries
import pandas as pd
import os
from collections import Counter
import stringdist as sd
import jellyfish as jlfsh

#show current directory and files in current directory
os.chdir(r"C:\Users\prozehnal\Desktop\csv_house\csv") #changes to correct directory from absolute reference
print(os.getcwd(),'<--current directory') #prints current directory to ensure you're in the right folder
print(os.listdir(os.getcwd()),'<----files in current dir') #lists files in current directory
print('\n\n')

#input -> output data manipulation
inp_data= pd.read_csv('db1.csv',usecols=[0],verbose=False) #potentially useful: skipinitialspace, squeeze,verbose
inp_data=inp_data["Features"].tolist()






data=[str.title(i) for i in inp_data]
print(1,data)
data = [element for item in data for element in item.split(', ')]
print(2,data)
#data = [element for item in data for element in item.split('-')] #using (', ') over (',') saved a lot of gried mymy.
print(data,type(data))
data_set=list(set(data))

df=pd.DataFrame(data)

#acronym_dict = {'Erp':'ERP','Crm':'CRM','Seo':'SEO','Url':'URL','Api':'API','Cpa':'CPA','Ssl':'SSL','Fmla':'FMLA','Fsa':'FSA','Ai':'AI','Id':'ID','Voip':'VOIP,'Sql':'SQL' }#,'Voip':'VOIP'
# df.replace({'Erp':'ERP','Crm':'CRM','Seo':'SEO','Url':'URL','Api':'API','Cpa':'CPA','Ssl':'SSL','Fmla':'FMLA','Fsa':'FSA','Ai':'AI','Id':'ID','Voip':'VOIP', 'Sql' : 'SQL'} ,inplace=True, regex=True)
#
# # df.replace('Erp','ERP',inplace=True, regex=True)
# # df.replace('Crm','CRM',inplace=True, regex=True)
# # df.replace('Seo','SEO',inplace=True, regex=True)
# # df.replace('Url','URL',inplace=True, regex=True)
# # # df.replace('Api','API',inplace=True, regex=True)
# # # df.replace('Cpa','CPA',inplace=True, regex=True)
# # df.replace('Ssl','SSL',inplace=True, regex=True)
# # df.replace('Fmla','FMLA',inplace=True, regex=True)
# # df.replace('Fsa','FSA',inplace=True, regex=True)
# # df.replace('Ai','AI',inplace=True, regex=True)
# # df.replace('Id','ID',inplace=True, regex=True)
# # df.replace('Voip','VOIP',inplace=True, regex=True)
#
#
#
# levenshtein display (no edit to output yet)
# change titled_data_l to df in order to compare acronyms, though that doesn't actually
# matter and is more bikeshedding than anything
fillup=[]
for i,j in zip(range(0,len(data)-1), range(1,len(data))):
    # print(i,j)
    a=sd.levenshtein(data[i],data[j])
    print(a)
    if a<12 and len(data[i])>4 and len(data[j])>4:
        fillup.extend([a,data[i],'&',data[j]])
fup=[]
for i in range(0, len(fillup), 4):
     fup.append(fillup[i : i+4])
fup=sorted(fup)
for i in range(len(fup)):
    print(fup[i]) #lines fup=[] to here are just so that the list is ordered. I first had to use extend, instead of

print(len(fup))                    #append, so that i could add multiple elements to the list at a time
                    #then i used append to a new list to get a list of lists, each sublist contains an entry.
#                     #then i sorted it, the last for loop is just to print more beautifully
#
#
#
#
# #------^-data manip-^-------v-datadisplay-v
#
# # counter function - create a user-defined version i future
print('\n'*5)
counted=Counter(data)
for i in counted:
    if counted[i]>1:
        print(i,'occured',counted[i],'times')
print()
#
# #statistic formation and display
#
# # perc_inc= round((dif*100)/(l_input_data),2),"percent improvement"
# print(len(inp_data), len(data),  len(inp_data)-len(data) ,'replacement(s)')#,perc_inc)

#sort andsave output somewhere
#df.sort_values(by=[0])
print(df)
df.to_csv(r"C:\Users\prozehnal\Desktop\csv_house\csv\outputB.csv")
